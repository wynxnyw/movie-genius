{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nexport function Home() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    Axios({\n      method: \"GET\",\n      url: \"http://localhost:8000/movies/create\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setData(res.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"you did it\"\n  }, void 0, false);\n}\n\n_s(Home, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kylewinkler/approot/movie-genius/client/src/pages/home/index.tsx"],"names":["React","useState","useEffect","Axios","Home","data","setData","getData","method","url","headers","then","res"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAa,EAAb,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,OAAf,GAAyB;AACrBJ,IAAAA,KAAK,CAAC;AACFK,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE,qCAFH;AAGFC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHP,KAAD,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAI;AACXN,MAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACH,KARD;AASH;;AAED,sBACI;AAAA;AAAA,mBADJ;AAIH;;GAvBeD,I;;KAAAA,I","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Axios from \"axios\";\n\nexport function Home() {\n    const [data, setData] = useState<Array<any>>([]);\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    async function getData() {\n        Axios({\n            method: \"GET\",\n            url: \"http://localhost:8000/movies/create\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(res => {\n            setData(res.data)\n        });\n    }\n\n    return (\n        <>you did it</>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}