{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kylewinkler/approot/movie-genius/client/src/pages/movies/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetch } from \"../../app/axios\";\nimport { Button } from '@material-ui/core';\nimport { CreateMovie } from \"./create\";\nexport function Movies() {\n  _s();\n\n  const [movies, setMovies] = useState();\n  const [showForm, setShowForm] = useState(true);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  async function fetchMovies() {\n    const movies = await fetch('movies');\n    setMovies(movies);\n  }\n\n  async function handleClickMovie(id) {\n    alert(id);\n  }\n\n  if (showForm) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: () => setShowForm(false),\n        children: \"New Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movies === null || movies === void 0 ? void 0 : movies.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleClickMovie(x._id),\n          children: x.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CreateMovie, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Movies, \"/HmkNHU0dcYSd8OcWHoLCVtjhnE=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/kylewinkler/approot/movie-genius/client/src/pages/movies/index.tsx"],"names":["React","useEffect","useState","fetch","Button","CreateMovie","Movies","movies","setMovies","showForm","setShowForm","fetchMovies","handleClickMovie","id","alert","map","x","_id","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SAASC,MAAT,QAA8B,mBAA9B;AACA,SAAQC,WAAR,QAA0B,UAA1B;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAU,IAAV,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,WAAf,GAA6B;AACzB,UAAMJ,MAAW,GAAG,MAAMJ,KAAK,CAAC,QAAD,CAA/B;AACAK,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH;;AAED,iBAAeK,gBAAf,CAAgCC,EAAhC,EAA6C;AACzCC,IAAAA,KAAK,CAACD,EAAD,CAAL;AACH;;AAED,MAAGJ,QAAH,EAAa;AACT,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,KAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKH,MADL,aACKA,MADL,uBACKA,MAAM,CAAEQ,GAAR,CAAYC,CAAC,iBAAI;AAAI,UAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAACI,CAAC,CAACC,GAAH,CAAnC;AAAA,oBAA6CD,CAAC,CAACE;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAAjB;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AACD,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GA5BeZ,M;;KAAAA,M","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Movie} from \"./Movies\";\nimport {fetch} from \"../../app/axios\";\nimport { Button, Modal } from '@material-ui/core';\nimport {CreateMovie} from \"./create\";\n\nexport function Movies() {\n    const [movies, setMovies] = useState<Array<Movie>>();\n    const [showForm, setShowForm] = useState<boolean>(true);\n\n    useEffect(() => {\n        fetchMovies();\n    }, [])\n\n    async function fetchMovies() {\n        const movies: any = await fetch('movies')\n        setMovies(movies)\n    }\n\n    async function handleClickMovie(id?: string) {\n        alert(id)\n    }\n\n    if(showForm) {\n        return (\n            <div>\n                <Button color='primary' onClick={() => setShowForm(false)}>New Entry</Button>\n                <ul>\n                    {movies?.map(x => <li onClick={() => handleClickMovie(x._id)}>{x.title}</li>)}\n                </ul>\n            </div>\n        )\n    }\n    return <CreateMovie />\n}"]},"metadata":{},"sourceType":"module"}